name: Publication Article Hebdomadaire

on:
  schedule:
    # Ex√©cution 1 fois par semaine : tous les lundis √† 7h00 UTC (8h00 heure de Paris en hiver)
    - cron: '0 8 * * 1'  # Lundi
  
  # Permet aussi de lancer manuellement depuis l'interface GitHub
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publier-article:
    runs-on: ubuntu-latest
    
    steps:
      - name: R√©cup√©rer le code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Installer les d√©pendances
        run: |
          pip install anthropic openai requests python-dotenv
      
      - name: Cr√©er le fichier .env
        env:
          ENV: ${{ secrets.ENV }}
        run: |
          echo "$ENV" > .env
      
      - name: V√©rification des fichiers n√©cessaires
        run: |
          if [ ! -f "sujets.csv" ]; then
            echo "‚ùå ERREUR: Le fichier sujets.csv est manquant"
            exit 1
          fi
          if [ ! -f "config_articles.txt" ]; then
            echo "‚ùå ERREUR: Le fichier config_articles.txt est manquant"
            exit 1
          fi
          echo "‚úÖ Tous les fichiers n√©cessaires sont pr√©sents"
      
      - name: Lancer le script
        run: python blog_generator_script.py
      
      - name: Commit et push des modifications
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          
          # Pull les derniers changements
          git pull --rebase origin main || true
          
          # Ajouter les fichiers modifi√©s
          git add sujets.csv
          if [ -f "sujets_traites.csv" ]; then
            git add sujets_traites.csv
          fi
          
          # V√©rifier s'il y a des changements
          if ! git diff --staged --quiet; then
            git commit -m "ü§ñ Article publi√© automatiquement - $(date +'%Y-%m-%d %H:%M')"
            
            # R√©essayer le push jusqu'√† 5 fois
            for i in {1..5}; do
              if git push; then
                echo "‚úÖ Modifications sauvegard√©es"
                break
              else
                echo "‚ö†Ô∏è Push √©chou√©, tentative $i/5"
                git pull --rebase origin main
                sleep 3
              fi
            done
          else
            echo "Aucun changement √† commiter"
          fi
        continue-on-error: true
      
      - name: Nettoyage du fichier .env
        if: always()
        run: rm -f .env
